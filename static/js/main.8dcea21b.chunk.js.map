{"version":3,"sources":["components/templates/header/index.module.scss","components/templates/layout/index.module.scss","pages/index.module.scss","components/templates/header/index.tsx","components/templates/layout/index.tsx","components/organisms/contact/index.tsx","services/api/index.ts","models/picture.ts","models/location.ts","models/user.ts","modules/domain/contactList.ts","pages/index.tsx","pages/contacts/index.tsx","modules/domain/user.ts","pages/users/index.tsx","reportWebVitals.ts","modules/ui/modal.ts","modules/ui/index.ts","modules/domain/index.ts","modules/index.ts","index.tsx"],"names":["module","exports","Header","className","styles","container","logo","menu","to","Layout","children","content","Contact","user","pathname","id","state","fullname","gender","email","client","axios","create","baseURL","fetchUserList","a","get","Picture","data","large","medium","thumbnail","this","Location","__data","city","postcode","street","User","picture","location","login","uuid","name","first","last","join","fetchContactList","createAsyncThunk","params","thunkApi","res","results","reduce","acc","item","slice","createSlice","initialState","reducers","extraReducers","String","fulfilled","action","payload","contactListSelector","createSelector","domain","contactList","Object","values","actions","App","dispatch","useDispatch","list","useSelector","useEffect","map","ContactPage","replace","retriveId","useLocation","createContactSelector","userSelector","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","show","push","hide","pop","Reducers","combineReducers","modal","reducer","ui","store","configureStore","ReactDOM","render","StrictMode","basename","process","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.8dcea21b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__2rjt9\",\"logo\":\"header_logo__Khcq9\",\"menu\":\"header_menu__3CN1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"layout_content__I-mr0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"pages_App__351wf\",\"App-logo\":\"pages_App-logo__2hdWx\",\"App-logo-spin\":\"pages_App-logo-spin__1q6vh\",\"App-header\":\"pages_App-header__qLZ8G\",\"App-link\":\"pages_App-link__1GCyh\"};","import React from 'react'\nimport styles from './index.module.scss'\nimport { Link } from 'react-router-dom'\n\ninterface Props {}\n\nconst Header: React.FC<Props> = () => {\n  return (\n    <header className={styles.container}>\n      <div className={styles.logo}>\n        <h1>Contact List</h1>\n      </div>\n      <div className={styles.menu}>\n        <ul>\n          <li>\n            <Link to=\"/\">Top</Link>\n          </li>\n          <li>\n            <Link to=\"/users\">Profile</Link>\n          </li>\n        </ul>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from 'components/templates/header'\nimport styles from './index.module.scss'\n\ninterface Props {\n  children: JSX.Element | JSX.Element[]\n}\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  return (\n    <div>\n      <Header />\n      <div className={styles.content}>{children}</div>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport User from 'models/user'\n\ninterface Props {\n  user: User\n}\nconst Contact: React.FC<Props> = ({ user }) => {\n  if (!user) {\n    return <></>\n  }\n  return (\n    <div>\n      <p>\n        <Link to={{\n          pathname: `/contacts/${user.id}`,\n          state: { id: user.id }\n        }}>{user.fullname}</Link>({user.gender})\n      </p>\n      <p>{user.email}</p>\n    </div>\n  )\n}\n\nexport default Contact\n","import axios from 'axios'\n\nconst client = axios.create({\n  baseURL: 'https://randomuser.me/api'\n})\n\nexport const fetchUser = async (key: string) => {\n  return await client.get(`/?key=${key}`)\n}\n\nexport const fetchUserList = async () => {\n  return await client.get('/?results=25')\n}\n","\n\nexport default class Picture {\n  large: string\n  medium: string\n  thumbnail: string\n\n  constructor(data: any) {\n    this.large = data.large\n    this.medium = data.medium\n    this.thumbnail = data.thumbnail\n  }\n}\n","\n\nexport default class Location {\n  private __data: any\n  city: string\n  postcode: string\n  state: string\n  street: string\n\n  constructor(data: any) {\n    this.city = data.city\n    this.postcode = data.postcode\n    this.state = data.state\n    this.street = data.street\n    this.__data = data\n  }\n}\n","import Picture from 'models/picture'\nimport Location from 'models/location'\n\nexport default class User {\n  private __data: any\n  id: string\n  email: string\n  gender: string\n  picture: Picture\n  location: Location\n\n  constructor(data: any) {\n    this.__data = data\n    this.id = data.login.uuid\n    this.email = data.email\n    this.gender = data.gender\n    this.picture = new Picture(data.picture)\n    this.location = new Location(data.location)\n  }\n\n  get fullname() {\n    return [this.__data.name.first, this.__data.name.last].join(' ')\n  }\n}\n","import { createSlice, createAsyncThunk, createSelector } from '@reduxjs/toolkit'\nimport { fetchUserList } from 'services/api'\nimport User from 'models/user'\n\nconst name = 'contactList'\n\nexport const fetchContactList = createAsyncThunk(\n  `${name}/fetchContactList`,\n  async (params: any, thunkApi: any) => {\n    const res = await fetchUserList()\n    const data = res.data.results.reduce((acc: any, item: any) => {\n      const user = new User(item)\n      return { ...acc, [user.id]: user }\n    }, {})\n    return data\n  }\n)\n\nconst initialState = {\n  data: {}\n}\n\ntype State = typeof initialState\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [String(fetchContactList.fulfilled)]: (state: State, action: any) => {\n      state.data = action.payload\n    }\n  }\n})\n\nexport const contactListSelector = createSelector(\n  (state: any) => {\n    return state.domain.contactList\n  },\n  ({ data }: any) => Object.values(data)\n)\nexport const createContactSelector = (id: string) => createSelector(\n  (state: any) => {\n    return state.domain.contactList\n  },\n  ({ data }: any): User => data[id]\n)\n\nexport const {} = slice.actions\n\nexport default slice.reducer\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Layout from 'components/templates/layout'\nimport Contact from 'components/organisms/contact'\nimport './index.module.scss'\nimport {\n  fetchContactList,\n  contactListSelector\n} from 'modules/domain/contactList'\n\nexport const App = () => {\n  const dispatch = useDispatch()\n  const list = useSelector(contactListSelector)\n\n  useEffect(() => {\n    dispatch(fetchContactList({}))\n  }, [])\n\n  return (\n    <Layout>\n      <h2>List</h2>\n      <ul>\n        {list.map((item: any) => {\n          return (\n            <li key={item.id}>\n              <Contact user={item} />\n            </li>\n          )\n        })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\nimport Layout from 'components/templates/layout'\nimport Contact from 'components/organisms/contact'\nimport { createContactSelector } from 'modules/domain/contactList'\n\nconst retriveId = (pathname: string) => {\n  return pathname.replace(/\\/contacts\\//, '')\n}\n\nconst ContactPage = () => {\n  const { pathname }: any = useLocation()\n  const id = retriveId(pathname)\n  const user = useSelector(createContactSelector(id || ''))\n\n  return (\n    <Layout>\n      <h2>Contact</h2>\n      <Contact user={user} />\n    </Layout>\n  )\n}\n\nexport default ContactPage\n","import { createSlice, createSelector } from '@reduxjs/toolkit'\nimport User from 'models/user'\n\nconst initialState = new User({\n  login: { uuid: '8e1687c5-505e-4329-ae9d-935533c720ca' },\n  email: 'test@example.com',\n  name: {\n    first: 'test',\n    name: 'user'\n  },\n  gender: 'unknown',\n  picture: {},\n  location: {}\n})\n\nconst slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {}\n})\n\nexport const userSelector = createSelector(\n  (state: any) => {\n    return state.domain.user\n  },\n  (user: any) => user\n)\nexport const {} = slice.actions\n\nexport default slice.reducer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport {\n  userSelector\n} from 'modules/domain/user'\nimport Layout from 'components/templates/layout'\nimport Contact from 'components/organisms/contact'\n\nconst User = () => {\n  const user = useSelector(userSelector)\n  return (\n    <Layout>\n      <h2>User</h2>\n      <Contact user={user} />\n    </Layout>\n  )\n}\n\nexport default User\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  show: false,\n  content: []\n}\n\nconst slice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    show(state: any, action: any) {\n      state.show = true\n      state.content.push(action.payload.content)\n    },\n    hide(state: any, action: any) {\n      state.show = false\n      state.content.pop()\n    }\n  }\n})\n\nexport const { show, hide } = slice.actions\n\nexport default slice.reducer\n","import { combineReducers } from 'redux'\nimport modal from 'modules/ui/modal'\n\nconst Reducers = combineReducers({\n  modal\n})\n\nexport default Reducers\n","import { combineReducers } from 'redux'\nimport contactList from 'modules/domain/contactList'\nimport user from 'modules/domain/user'\n\nconst Reducers = combineReducers({\n  user,\n  contactList\n})\n\nexport default Reducers\n","import { combineReducers } from 'redux'\nimport ui from 'modules/ui'\nimport domain from 'modules/domain'\n\nimport { configureStore } from '@reduxjs/toolkit'\n\nconst reducer = combineReducers({\n  ui,\n  domain\n})\n\nconst store = configureStore({\n  reducer\n})\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport './index.scss'\nimport App from './pages/'\nimport Contact from './pages/contacts'\nimport User from './pages/users'\nimport reportWebVitals from './reportWebVitals'\nimport store from 'modules/index'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route exact path=\"/contacts/:id\">\n          <Contact />\n        </Route>\n        <Route exact path=\"/users\">\n          <User />\n        </Route>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}